{"ast":null,"code":"var _class;\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class LoadingService {\n  constructor() {\n    this.isLoadingSubject = new BehaviorSubject(false);\n  }\n  showLoading() {\n    this.isLoadingSubject.next(true);\n  }\n  hideLoading() {\n    this.isLoadingSubject.next(false);\n  }\n  get isLoading() {\n    return this.isLoadingSubject.asObservable();\n  }\n}\n_class = LoadingService;\n_class.ɵfac = function LoadingService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","LoadingService","constructor","isLoadingSubject","showLoading","next","hideLoading","isLoading","asObservable","factory","ɵfac","providedIn"],"sources":["/Users/mayuresh483/Desktop/Personal Projects/Food Bite/Foodbite/src/app/services/loading.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  private isLoadingSubject = new BehaviorSubject<boolean>(false);\n  constructor() { }\n\n  showLoading(){\n    this.isLoadingSubject.next(true);\n  }\n\n  hideLoading(){\n    this.isLoadingSubject.next(false);\n  }\n\n  get isLoading(){\n    return this.isLoadingSubject.asObservable();\n  }\n}\n"],"mappings":";AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,cAAc;EAEzBC,YAAA;IADQ,KAAAC,gBAAgB,GAAG,IAAIH,eAAe,CAAU,KAAK,CAAC;EAC9C;EAEhBI,WAAWA,CAAA;IACT,IAAI,CAACD,gBAAgB,CAACE,IAAI,CAAC,IAAI,CAAC;EAClC;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACH,gBAAgB,CAACE,IAAI,CAAC,KAAK,CAAC;EACnC;EAEA,IAAIE,SAASA,CAAA;IACX,OAAO,IAAI,CAACJ,gBAAgB,CAACK,YAAY,EAAE;EAC7C;;SAdWP,cAAc;;mBAAdA,MAAc;AAAA;;SAAdA,MAAc;EAAAQ,OAAA,EAAdR,MAAc,CAAAS,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
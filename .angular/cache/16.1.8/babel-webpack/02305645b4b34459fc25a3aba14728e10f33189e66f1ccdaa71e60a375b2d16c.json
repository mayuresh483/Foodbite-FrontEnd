{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/order.service\";\nimport * as i2 from \"src/app/services/cart.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nconst _c0 = [\"paypal\"];\nexport class PaypalButtonComponent {\n  constructor(orderService, cartService, router, toastrService) {\n    this.orderService = orderService;\n    this.cartService = cartService;\n    this.router = router;\n    this.toastrService = toastrService;\n  }\n  ngOnInit() {\n    const self = this;\n    debugger;\n    paypal.Buttons(\n    //   {\n    //   createOrder: (data: any, actions: any) => {\n    //     return actions.order.create({\n    //       purchase_unit: [\n    //         {\n    //           amount: {\n    //             currency_code: 'INR',\n    //             value: self.order.totalPrice\n    //           }\n    //         }\n    //       ]\n    //     })\n    //   },\n    //   onApprove: async (data: any, actions: any) => {\n    //     debugger\n    //     const payment = await actions.order.capture();\n    //     this.order.paymentId = payment.id;\n    //     self.orderService.pay(this.order).subscribe(\n    //       {\n    //         next: (orderId) => {\n    //           this.cartService.clearCart();\n    //           this.router.navigateByUrl('/track/' + orderId);\n    //           this.toastrService.success(\n    //             'Payment Saved Successfully',\n    //             'Success'\n    //           );\n    //         },\n    //         error: (error) => {\n    //           this.toastrService.error('Payment Save Failed', 'Error');\n    //         }\n    //       }\n    //     );\n    //   },\n    //   onError: (err: any) => {\n    //     this.toastrService.error('Payment Failed', 'Error');\n    //     console.log(err);\n    //   },\n    // }\n    {\n      onError: err => {\n        this.toastrService.wa('Payment Failed', 'Error');\n        console.log(err);\n      }\n    }).render(this.paypalElement.nativeElement);\n  }\n}\n_class = PaypalButtonComponent;\n_class.ɵfac = function PaypalButtonComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.OrderService), i0.ɵɵdirectiveInject(i2.CartService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-paypal-button\"]],\n  viewQuery: function PaypalButtonComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paypalElement = _t.first);\n    }\n  },\n  inputs: {\n    order: \"order\"\n  },\n  decls: 2,\n  vars: 0,\n  consts: [[\"paypal\", \"\"]],\n  template: function PaypalButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", null, 0);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["PaypalButtonComponent","constructor","orderService","cartService","router","toastrService","ngOnInit","self","paypal","Buttons","onError","err","wa","console","log","render","paypalElement","nativeElement","i0","ɵɵdirectiveInject","i1","OrderService","i2","CartService","i3","Router","i4","ToastrService","selectors","viewQuery","PaypalButtonComponent_Query","rf","ctx","ɵɵelement"],"sources":["/Users/mayuresh483/Desktop/Personal Projects/Food Bite/Foodbite/src/app/pages/paypal-button/paypal-button.component.ts","/Users/mayuresh483/Desktop/Personal Projects/Food Bite/Foodbite/src/app/pages/paypal-button/paypal-button.component.html"],"sourcesContent":["import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CartService } from 'src/app/services/cart.service';\nimport { OrderService } from 'src/app/services/order.service';\nimport { Order } from 'src/app/shared/models/Order';\n\ndeclare var paypal: any;\n\n@Component({\n  selector: 'app-paypal-button',\n  templateUrl: './paypal-button.component.html',\n  styleUrls: ['./paypal-button.component.css']\n})\nexport class PaypalButtonComponent implements OnInit {\n\n  @Input()\n  order!: Order;\n\n  @ViewChild('paypal', { static: true })\n  paypalElement!: ElementRef;\n\n  constructor(private orderService: OrderService,\n    private cartService: CartService,\n    private router: Router,\n    private toastrService: ToastrService) { }\n\n  ngOnInit(): void {\n    const self = this;\n    debugger\n    paypal.Buttons(\n    //   {\n    //   createOrder: (data: any, actions: any) => {\n    //     return actions.order.create({\n    //       purchase_unit: [\n    //         {\n    //           amount: {\n    //             currency_code: 'INR',\n    //             value: self.order.totalPrice\n    //           }\n    //         }\n    //       ]\n    //     })\n    //   },\n    //   onApprove: async (data: any, actions: any) => {\n    //     debugger\n    //     const payment = await actions.order.capture();\n    //     this.order.paymentId = payment.id;\n    //     self.orderService.pay(this.order).subscribe(\n    //       {\n    //         next: (orderId) => {\n    //           this.cartService.clearCart();\n    //           this.router.navigateByUrl('/track/' + orderId);\n    //           this.toastrService.success(\n    //             'Payment Saved Successfully',\n    //             'Success'\n    //           );\n    //         },\n    //         error: (error) => {\n    //           this.toastrService.error('Payment Save Failed', 'Error');\n    //         }\n    //       }\n    //     );\n    //   },\n\n    //   onError: (err: any) => {\n    //     this.toastrService.error('Payment Failed', 'Error');\n    //     console.log(err);\n    //   },\n    // }\n      {\n       onError: (err: any) => {\n        this.toastrService.wa('Payment Failed', 'Error');\n        console.log(err);\n      },\n\n     })\n      .render(this.paypalElement.nativeElement);\n  }\n}\n","<div #paypal></div>"],"mappings":";;;;;;;AAcA,OAAM,MAAOA,qBAAqB;EAQhCC,YAAoBC,YAA0B,EACpCC,WAAwB,EACxBC,MAAc,EACdC,aAA4B;IAHlB,KAAAH,YAAY,GAAZA,YAAY;IACtB,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,aAAa,GAAbA,aAAa;EAAmB;EAE1CC,QAAQA,CAAA;IACN,MAAMC,IAAI,GAAG,IAAI;IACjB;IACAC,MAAM,CAACC,OAAO;IACd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACE;MACCC,OAAO,EAAGC,GAAQ,IAAI;QACrB,IAAI,CAACN,aAAa,CAACO,EAAE,CAAC,gBAAgB,EAAE,OAAO,CAAC;QAChDC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAClB;KAEA,CAAC,CACAI,MAAM,CAAC,IAAI,CAACC,aAAa,CAACC,aAAa,CAAC;EAC7C;;SAhEWjB,qBAAqB;;mBAArBA,MAAqB,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA,GAAAP,EAAA,CAAAC,iBAAA,CAAAO,EAAA,CAAAC,aAAA;AAAA;;QAArB3B,MAAqB;EAAA4B,SAAA;EAAAC,SAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;MCdlCb,EAAA,CAAAe,SAAA,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
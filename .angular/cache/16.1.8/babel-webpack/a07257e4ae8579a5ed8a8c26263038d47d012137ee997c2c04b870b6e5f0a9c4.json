{"ast":null,"code":"var _class;\nimport { FOOD_SEARCH_URL, FOOD_URL, FOOD_BY_ID_URL, SEARCH_TAG_URL, TAGS_URL } from '../shared/utility/constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FoodService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(FOOD_URL);\n  }\n  getFoodFromSearch(foodSearch) {\n    return this.http.get(FOOD_SEARCH_URL + foodSearch);\n  }\n  getAllTags() {\n    console.log(TAGS_URL);\n    return this.http.get(TAGS_URL);\n  }\n  getAllFoodByTag(tag) {\n    return this.http.get(SEARCH_TAG_URL + tag);\n  }\n  getFoodById(id) {\n    return this.http.get(FOOD_BY_ID_URL + id);\n  }\n}\n_class = FoodService;\n_class.ɵfac = function FoodService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["FOOD_SEARCH_URL","FOOD_URL","FOOD_BY_ID_URL","SEARCH_TAG_URL","TAGS_URL","FoodService","constructor","http","getAll","get","getFoodFromSearch","foodSearch","getAllTags","console","log","getAllFoodByTag","tag","getFoodById","id","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/mayuresh483/Desktop/Personal Projects/Food Bite/Foodbite/src/app/services/food.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Food } from '../shared/models/Food';\nimport { Tags } from '../shared/models/Tags';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FOOD_SEARCH_URL, FOOD_URL, FOOD_BY_ID_URL, SEARCH_TAG_URL, TAGS_URL } from '../shared/utility/constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FoodService {\n\n  constructor(private http:HttpClient) { }\n\n  getAll():Observable<Food[]>{\n    return this.http.get<Food[]>(FOOD_URL);\n  }\n\n  getFoodFromSearch(foodSearch:string):Observable<Food[]>{\n    return this.http.get<Food[]>(FOOD_SEARCH_URL + foodSearch);\n  }\n\n  getAllTags():Observable<Tags[]>{\n    console.log(TAGS_URL);\n    return this.http.get<Tags[]>(TAGS_URL);\n  }\n\n  getAllFoodByTag(tag:string):Observable<Food[]>{\n    return this.http.get<Food[]>(SEARCH_TAG_URL + tag);\n  }\n\n  getFoodById(id:string):Observable<Food>{\n    return this.http.get<Food>(FOOD_BY_ID_URL + id);\n  }\n}\n"],"mappings":";AAKA,SAASA,eAAe,EAAEC,QAAQ,EAAEC,cAAc,EAAEC,cAAc,EAAEC,QAAQ,QAAQ,6BAA6B;;;AAKjH,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAASR,QAAQ,CAAC;EACxC;EAEAS,iBAAiBA,CAACC,UAAiB;IACjC,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAST,eAAe,GAAGW,UAAU,CAAC;EAC5D;EAEAC,UAAUA,CAAA;IACRC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;IACrB,OAAO,IAAI,CAACG,IAAI,CAACE,GAAG,CAASL,QAAQ,CAAC;EACxC;EAEAW,eAAeA,CAACC,GAAU;IACxB,OAAO,IAAI,CAACT,IAAI,CAACE,GAAG,CAASN,cAAc,GAAGa,GAAG,CAAC;EACpD;EAEAC,WAAWA,CAACC,EAAS;IACnB,OAAO,IAAI,CAACX,IAAI,CAACE,GAAG,CAAOP,cAAc,GAAGgB,EAAE,CAAC;EACjD;;SAvBWb,WAAW;;mBAAXA,MAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXjB,MAAW;EAAAkB,OAAA,EAAXlB,MAAW,CAAAmB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _class;\nimport { HttpEventType } from '@angular/common/http';\nimport { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/loading.service\";\nvar pendingRequests = 0;\nexport class InterceptorsInterceptor {\n  constructor(loadingService) {\n    this.loadingService = loadingService;\n  }\n  intercept(request, next) {\n    this.loadingService.showLoading();\n    pendingRequests++;\n    return next.handle(request).pipe(tap({\n      next: event => {\n        if (event.type === HttpEventType.Response) {\n          pendingRequests--;\n          if (pendingRequests == 0) this.loadingService.hideLoading();\n        }\n      }\n    }));\n  }\n}\n_class = InterceptorsInterceptor;\n_class.ɵfac = function InterceptorsInterceptor_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.LoadingService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["HttpEventType","tap","pendingRequests","InterceptorsInterceptor","constructor","loadingService","intercept","request","next","showLoading","handle","pipe","event","type","Response","hideLoading","i0","ɵɵinject","i1","LoadingService","factory","ɵfac"],"sources":["/Users/mayuresh483/Desktop/Personal Projects/Food Bite/Foodbite/src/app/interceptor/interceptors.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpEventType\n} from '@angular/common/http';\nimport { Observable, tap } from 'rxjs';\nimport { LoadingService } from '../services/loading.service';\n\nvar pendingRequests = 0;\n@Injectable()\nexport class InterceptorsInterceptor implements HttpInterceptor {\n\n  constructor(private loadingService:LoadingService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.loadingService.showLoading();\n    pendingRequests++;\n\n    return next.handle(request).pipe(\n      tap(\n        {\n          next:(event)=>{\n            if(event.type === HttpEventType.Response){\n              pendingRequests--;\n              if(pendingRequests==0)\n              this.loadingService.hideLoading();\n            }\n          }\n\n        })\n    );\n  }\n}\n"],"mappings":";AACA,SAKEA,aAAa,QACR,sBAAsB;AAC7B,SAAqBC,GAAG,QAAQ,MAAM;;;AAGtC,IAAIC,eAAe,GAAG,CAAC;AAEvB,OAAM,MAAOC,uBAAuB;EAElCC,YAAoBC,cAA6B;IAA7B,KAAAA,cAAc,GAAdA,cAAc;EAAkB;EAEpDC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,IAAI,CAACH,cAAc,CAACI,WAAW,EAAE;IACjCP,eAAe,EAAE;IAEjB,OAAOM,IAAI,CAACE,MAAM,CAACH,OAAO,CAAC,CAACI,IAAI,CAC9BV,GAAG,CACD;MACEO,IAAI,EAAEI,KAAK,IAAG;QACZ,IAAGA,KAAK,CAACC,IAAI,KAAKb,aAAa,CAACc,QAAQ,EAAC;UACvCZ,eAAe,EAAE;UACjB,IAAGA,eAAe,IAAE,CAAC,EACrB,IAAI,CAACG,cAAc,CAACU,WAAW,EAAE;;MAErC;KAED,CAAC,CACL;EACH;;SArBWZ,uBAAuB;;mBAAvBA,MAAuB,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;;SAAvBhB,MAAuB;EAAAiB,OAAA,EAAvBjB,MAAuB,CAAAkB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
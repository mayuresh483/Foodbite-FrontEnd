{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction InputValidationComponent_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nfunction InputValidationComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, InputValidationComponent_div_0_div_1_Template, 1, 0, \"div\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.errorMessages);\n  }\n}\nconst Messages = {\n  required: 'Should not be empty',\n  email: 'Email is not valid'\n};\nexport class InputValidationComponent {\n  constructor() {\n    this.showErrorsWhen = true;\n    this.errorMessages = [];\n  }\n  ngOnInit() {\n    this.control.statusChanges.subscribe(() => {\n      this.checkValidation();\n    });\n    this.control.valueChanges.subscribe(() => {\n      this.checkValidation();\n    });\n  }\n  ngOnChanges(changes) {\n    this.checkValidation();\n  }\n  checkValidation() {\n    const errors = this.control.errors;\n    if (!errors) {\n      this.errorMessages = [];\n      return;\n    }\n    const errorKeys = Object.keys(errors);\n    this.errorMessages = errorKeys.map(key => Messages[key]);\n  }\n}\n_class = InputValidationComponent;\n_class.ɵfac = function InputValidationComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-input-validation\"]],\n  inputs: {\n    control: \"control\",\n    showErrorsWhen: \"showErrorsWhen\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"error-list\", 4, \"ngIf\"], [1, \"error-list\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function InputValidationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, InputValidationComponent_div_0_Template, 2, 1, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessages && ctx.showErrorWhen);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵelementStart","ɵɵtemplate","InputValidationComponent_div_0_div_1_Template","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","errorMessages","Messages","required","email","InputValidationComponent","constructor","showErrorsWhen","ngOnInit","control","statusChanges","subscribe","checkValidation","valueChanges","ngOnChanges","changes","errors","errorKeys","Object","keys","map","key","selectors","inputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","InputValidationComponent_Template","rf","ctx","InputValidationComponent_div_0_Template","showErrorWhen"],"sources":["/Users/mayuresh483/Desktop/Personal Projects/Food Bite/Foodbite/src/app/pages/input-validation/input-validation.component.ts","/Users/mayuresh483/Desktop/Personal Projects/Food Bite/Foodbite/src/app/pages/input-validation/input-validation.component.html"],"sourcesContent":["import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\n\nconst Messages:any = {\n  required:'Should not be empty',\n  email:'Email is not valid'\n}  \n\n@Component({\n  selector: 'app-input-validation',\n  templateUrl: './input-validation.component.html',\n  styleUrls: ['./input-validation.component.css']\n})\n\nexport class InputValidationComponent implements OnChanges, OnInit{  \n  @Input()\n  control!:AbstractControl;\n\n  @Input()\n  showErrorsWhen:boolean = true;\n  errorMessages:string[]=[];\n\n  ngOnInit(): void {\n    this.control.statusChanges.subscribe(()=>{\n      this.checkValidation();\n    });\n    this.control.valueChanges.subscribe(()=>{\n      this.checkValidation();\n    })\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.checkValidation();\n  }\n\n  checkValidation(){\n    const errors =  this.control.errors;\n\n    if(!errors){\n      this.errorMessages = [];\n      return;\n    }\n\n    const errorKeys = Object.keys(errors);\n    this.errorMessages = errorKeys.map(key=> Messages[key]);\n  }\n}\n","<div class=\"error-list\" *ngIf=\"errorMessages && showErrorWhen\">\n    <div *ngFor=\"let message of errorMessages\">\n\n    </div>\n</div>"],"mappings":";;;;;ICCIA,EAAA,CAAAC,SAAA,UAEM;;;;;IAHVD,EAAA,CAAAE,cAAA,aAA+D;IAC3DF,EAAA,CAAAG,UAAA,IAAAC,6CAAA,iBAEM;IACVJ,EAAA,CAAAK,YAAA,EAAM;;;;IAHuBL,EAAA,CAAAM,SAAA,GAAgB;IAAhBN,EAAA,CAAAO,UAAA,YAAAC,MAAA,CAAAC,aAAA,CAAgB;;;ADG7C,MAAMC,QAAQ,GAAO;EACnBC,QAAQ,EAAC,qBAAqB;EAC9BC,KAAK,EAAC;CACP;AAQD,OAAM,MAAOC,wBAAwB;EANrCC,YAAA;IAWE,KAAAC,cAAc,GAAW,IAAI;IAC7B,KAAAN,aAAa,GAAU,EAAE;;EAEzBO,QAAQA,CAAA;IACN,IAAI,CAACC,OAAO,CAACC,aAAa,CAACC,SAAS,CAAC,MAAI;MACvC,IAAI,CAACC,eAAe,EAAE;IACxB,CAAC,CAAC;IACF,IAAI,CAACH,OAAO,CAACI,YAAY,CAACF,SAAS,CAAC,MAAI;MACtC,IAAI,CAACC,eAAe,EAAE;IACxB,CAAC,CAAC;EACJ;EAEAE,WAAWA,CAACC,OAAsB;IAChC,IAAI,CAACH,eAAe,EAAE;EACxB;EAEAA,eAAeA,CAAA;IACb,MAAMI,MAAM,GAAI,IAAI,CAACP,OAAO,CAACO,MAAM;IAEnC,IAAG,CAACA,MAAM,EAAC;MACT,IAAI,CAACf,aAAa,GAAG,EAAE;MACvB;;IAGF,MAAMgB,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC;IACrC,IAAI,CAACf,aAAa,GAAGgB,SAAS,CAACG,GAAG,CAACC,GAAG,IAAGnB,QAAQ,CAACmB,GAAG,CAAC,CAAC;EACzD;;SA/BWhB,wBAAwB;;mBAAxBA,MAAwB;AAAA;;QAAxBA,MAAwB;EAAAiB,SAAA;EAAAC,MAAA;IAAAd,OAAA;IAAAF,cAAA;EAAA;EAAAiB,QAAA,GAAAhC,EAAA,CAAAiC,oBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCfrCvC,EAAA,CAAAG,UAAA,IAAAsC,uCAAA,iBAIM;;;MAJmBzC,EAAA,CAAAO,UAAA,SAAAiC,GAAA,CAAA/B,aAAA,IAAA+B,GAAA,CAAAE,aAAA,CAAoC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
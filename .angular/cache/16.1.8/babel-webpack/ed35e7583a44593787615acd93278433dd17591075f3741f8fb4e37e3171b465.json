{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/users.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../title/title.component\";\nexport class RegistrationComponent {\n  constructor(userService, router, fb, activatedRoute) {\n    this.userService = userService;\n    this.router = router;\n    this.fb = fb;\n    this.activatedRoute = activatedRoute;\n    this.isSubmited = false;\n    // activatedRoute.snapshot.queryParamMap\n  }\n\n  ngOnInit() {\n    this.registrationForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(5)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required, Validators.minLength(5)],\n      confirmPassword: ['', Validators.required],\n      address: ['', Validators.required, Validators.minLength(10)]\n    }, {\n      Validators: this.passwordMatchValidation('password', 'confirmPassword')\n    });\n  }\n  get f() {\n    return this.registrationForm.controls;\n  }\n  passwordMatchValidation(password, confirmPassword) {\n    const validator = form => {\n      const passwordControl = form.get(password);\n      const confirmPasswordControl = form.get(confirmPassword);\n      if (!passwordControl || !confirmPasswordControl) {\n        return;\n      }\n      if (passwordControl.value != confirmPasswordControl.value) {\n        confirmPasswordControl.setErrors({\n          notMatch: true\n        });\n      } else {\n        const errors = confirmPasswordControl.errors;\n        if (!errors) return;\n        delete errors.notMatch;\n      }\n    };\n  }\n}\n_class = RegistrationComponent;\n_class.ɵfac = function RegistrationComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.UsersService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-registration\"]],\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"container\"], [1, \"details\"], [\"title\", \"User Registration\"]],\n  template: function RegistrationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"app-title\", 2);\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i4.TitleComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","RegistrationComponent","constructor","userService","router","fb","activatedRoute","isSubmited","ngOnInit","registrationForm","group","name","required","minLength","email","password","confirmPassword","address","passwordMatchValidation","f","controls","validator","form","passwordControl","get","confirmPasswordControl","value","setErrors","notMatch","errors","i0","ɵɵdirectiveInject","i1","UsersService","i2","Router","i3","FormBuilder","ActivatedRoute","selectors","decls","vars","consts","template","RegistrationComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd"],"sources":["/Users/mayuresh483/Desktop/Personal Projects/Food Bite/Foodbite/src/app/pages/registration/registration.component.ts","/Users/mayuresh483/Desktop/Personal Projects/Food Bite/Foodbite/src/app/pages/registration/registration.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UsersService } from 'src/app/services/users.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit{\n\n  registrationForm!:FormGroup;\n  isSubmited:boolean=false;\n\n  constructor(private userService:UsersService, private router:Router,\n    private fb:FormBuilder, private activatedRoute:ActivatedRoute){\n      // activatedRoute.snapshot.queryParamMap\n    }\n\n  ngOnInit(): void {\n    this.registrationForm = this.fb.group({\n      name:['',[Validators.required,Validators.minLength(5)]],\n      email:['',[Validators.required,Validators.email]],\n      password:['',Validators.required,Validators.minLength(5)],\n      confirmPassword : ['',Validators.required],\n      address:['',Validators.required,Validators.minLength(10)]\n    },{\n      Validators: this.passwordMatchValidation('password','confirmPassword')\n    })\n  }\n\n  get f(){\n    return this.registrationForm.controls;\n  }\n\n  passwordMatchValidation(password:string, confirmPassword:string){\n    const validator = (form:AbstractControl)=>{\n      const passwordControl = form.get(password);\n      const confirmPasswordControl = form.get(confirmPassword);\n\n      if(!passwordControl || !confirmPasswordControl){\n        return;\n      }\n      if(passwordControl.value!=confirmPasswordControl.value){\n        confirmPasswordControl.setErrors({notMatch:true});\n      }else{\n        const errors = confirmPasswordControl.errors;\n        if(!errors) return\n        delete errors.notMatch;\n      }\n    }\n  }\n}\n","<div class=\"container\">\n    <div class=\"details\">\n        <app-title title=\"User Registration\"></app-title>\n    </div>\n</div>"],"mappings":";AACA,SAAkDA,UAAU,QAAQ,gBAAgB;;;;;;AASpF,OAAM,MAAOC,qBAAqB;EAKhCC,YAAoBC,WAAwB,EAAUC,MAAa,EACzDC,EAAc,EAAUC,cAA6B;IAD3C,KAAAH,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAClD,KAAAC,EAAE,GAAFA,EAAE;IAAsB,KAAAC,cAAc,GAAdA,cAAc;IAHhD,KAAAC,UAAU,GAAS,KAAK;IAIpB;EACF;;EAEFC,QAAQA,CAAA;IACN,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MACpCC,IAAI,EAAC,CAAC,EAAE,EAAC,CAACX,UAAU,CAACY,QAAQ,EAACZ,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACvDC,KAAK,EAAC,CAAC,EAAE,EAAC,CAACd,UAAU,CAACY,QAAQ,EAACZ,UAAU,CAACc,KAAK,CAAC,CAAC;MACjDC,QAAQ,EAAC,CAAC,EAAE,EAACf,UAAU,CAACY,QAAQ,EAACZ,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,CAAC;MACzDG,eAAe,EAAG,CAAC,EAAE,EAAChB,UAAU,CAACY,QAAQ,CAAC;MAC1CK,OAAO,EAAC,CAAC,EAAE,EAACjB,UAAU,CAACY,QAAQ,EAACZ,UAAU,CAACa,SAAS,CAAC,EAAE,CAAC;KACzD,EAAC;MACAb,UAAU,EAAE,IAAI,CAACkB,uBAAuB,CAAC,UAAU,EAAC,iBAAiB;KACtE,CAAC;EACJ;EAEA,IAAIC,CAACA,CAAA;IACH,OAAO,IAAI,CAACV,gBAAgB,CAACW,QAAQ;EACvC;EAEAF,uBAAuBA,CAACH,QAAe,EAAEC,eAAsB;IAC7D,MAAMK,SAAS,GAAIC,IAAoB,IAAG;MACxC,MAAMC,eAAe,GAAGD,IAAI,CAACE,GAAG,CAACT,QAAQ,CAAC;MAC1C,MAAMU,sBAAsB,GAAGH,IAAI,CAACE,GAAG,CAACR,eAAe,CAAC;MAExD,IAAG,CAACO,eAAe,IAAI,CAACE,sBAAsB,EAAC;QAC7C;;MAEF,IAAGF,eAAe,CAACG,KAAK,IAAED,sBAAsB,CAACC,KAAK,EAAC;QACrDD,sBAAsB,CAACE,SAAS,CAAC;UAACC,QAAQ,EAAC;QAAI,CAAC,CAAC;OAClD,MAAI;QACH,MAAMC,MAAM,GAAGJ,sBAAsB,CAACI,MAAM;QAC5C,IAAG,CAACA,MAAM,EAAE;QACZ,OAAOA,MAAM,CAACD,QAAQ;;IAE1B,CAAC;EACH;;SA1CW3B,qBAAqB;;mBAArBA,MAAqB,EAAA6B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA,GAAAP,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAI,cAAA;AAAA;;QAArBrC,MAAqB;EAAAsC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVlCf,EAAA,CAAAiB,cAAA,aAAuB;MAEfjB,EAAA,CAAAkB,SAAA,mBAAiD;MACrDlB,EAAA,CAAAmB,YAAA,EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
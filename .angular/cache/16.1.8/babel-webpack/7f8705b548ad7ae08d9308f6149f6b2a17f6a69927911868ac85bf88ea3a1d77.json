{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../title/title.component\";\nfunction LoginComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Should Not be Empty\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, LoginComponent_div_9_div_1_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.g.email.errors.required);\n  }\n}\nexport class LoginComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.isSubmitted = false;\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  get g() {\n    return this.loginForm.controls;\n  }\n  onSubmit() {\n    this.isSubmitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 18,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"details\"], [\"title\", \"Login\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"input-container\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"formControlName\", \"email\"], [\"class\", \"error-list\", 4, \"ngIf\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\"], [1, \"button\"], [\"type\", \"submit\"], [1, \"error-list\"], [4, \"ngIf\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"app-title\", 2);\n      i0.ɵɵelementStart(3, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"label\");\n      i0.ɵɵtext(6, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\");\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\");\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\");\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 8)(16, \"button\", 9);\n      i0.ɵɵtext(17, \"Login\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.g.email.errors && ctx.isSubmitted);\n    }\n  },\n  dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.TitleComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_div_9_div_1_Template","ɵɵadvance","ɵɵproperty","ctx_r0","g","email","errors","required","LoginComponent","constructor","fb","isSubmitted","ngOnInit","loginForm","group","password","controls","onSubmit","invalid","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","LoginComponent_div_9_Template"],"sources":["/Users/mayuresh483/Desktop/Personal Projects/Food Bite/Foodbite/src/app/pages/login/login.component.ts","/Users/mayuresh483/Desktop/Personal Projects/Food Bite/Foodbite/src/app/pages/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n  loginForm!:FormGroup;\n  isSubmitted:boolean = false;\n\n  constructor(private fb:FormBuilder){}\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      email: ['',[Validators.required, Validators.email]],\n      password: ['',Validators.required]\n    })\n  }\n\n  get g(){\n    return this.loginForm.controls;\n  }\n\n  onSubmit(){\n    this.isSubmitted = true;\n    if(this.loginForm.invalid){\n      return;\n    }\n    \n  }\n}\n","<div class=\"container\">\n    <div class=\"details\">\n        <app-title title=\"Login\"></app-title>\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"input-container\">\n                <label>Email</label>\n                <div>\n                    <input type=\"email\" placeholder=\"Email\" formControlName=\"email\">\n                </div>\n                <div class=\"error-list\" *ngIf=\"g.email.errors && isSubmitted\">\n                    <div *ngIf=\"g.email.errors.required\">Should Not be Empty</div>\n                </div>\n            </div>\n            <div class=\"input-container\">\n                <label>Password</label>\n                <div>\n                    <input type=\"password\" placeholder=\"Password\" formControlName=\"password\">\n                </div>\n            </div>\n            <div class=\"button\">\n                <button type=\"submit\">Login</button>\n            </div>\n        </form>\n    </div>\n</div>"],"mappings":";AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;ICS/CC,EAAA,CAAAC,cAAA,UAAqC;IAAAD,EAAA,CAAAE,MAAA,0BAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IADlEH,EAAA,CAAAC,cAAA,cAA8D;IAC1DD,EAAA,CAAAI,UAAA,IAAAC,mCAAA,kBAA8D;IAClEL,EAAA,CAAAG,YAAA,EAAM;;;;IADIH,EAAA,CAAAM,SAAA,GAA6B;IAA7BN,EAAA,CAAAO,UAAA,SAAAC,MAAA,CAAAC,CAAA,CAAAC,KAAA,CAAAC,MAAA,CAAAC,QAAA,CAA6B;;;ADFvD,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,EAAc;IAAd,KAAAA,EAAE,GAAFA,EAAE;IAFtB,KAAAC,WAAW,GAAW,KAAK;EAES;EAEpCC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC7BT,KAAK,EAAE,CAAC,EAAE,EAAC,CAACX,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACW,KAAK,CAAC,CAAC;MACnDU,QAAQ,EAAE,CAAC,EAAE,EAACrB,UAAU,CAACa,QAAQ;KAClC,CAAC;EACJ;EAEA,IAAIH,CAACA,CAAA;IACH,OAAO,IAAI,CAACS,SAAS,CAACG,QAAQ;EAChC;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACN,WAAW,GAAG,IAAI;IACvB,IAAG,IAAI,CAACE,SAAS,CAACK,OAAO,EAAC;MACxB;;EAGJ;;SAvBWV,cAAc;;mBAAdA,MAAc,EAAAb,EAAA,CAAAwB,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;;QAAdb,MAAc;EAAAc,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR3BjC,EAAA,CAAAC,cAAA,aAAuB;MAEfD,EAAA,CAAAmC,SAAA,mBAAqC;MACrCnC,EAAA,CAAAC,cAAA,cAAsD;MAAxBD,EAAA,CAAAoC,UAAA,sBAAAC,iDAAA;QAAA,OAAYH,GAAA,CAAAZ,QAAA,EAAU;MAAA,EAAC;MACjDtB,EAAA,CAAAC,cAAA,aAA6B;MAClBD,EAAA,CAAAE,MAAA,YAAK;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACpBH,EAAA,CAAAC,cAAA,UAAK;MACDD,EAAA,CAAAmC,SAAA,eAAgE;MACpEnC,EAAA,CAAAG,YAAA,EAAM;MACNH,EAAA,CAAAI,UAAA,IAAAkC,6BAAA,iBAEM;MACVtC,EAAA,CAAAG,YAAA,EAAM;MACNH,EAAA,CAAAC,cAAA,cAA6B;MAClBD,EAAA,CAAAE,MAAA,gBAAQ;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACvBH,EAAA,CAAAC,cAAA,WAAK;MACDD,EAAA,CAAAmC,SAAA,gBAAyE;MAC7EnC,EAAA,CAAAG,YAAA,EAAM;MAEVH,EAAA,CAAAC,cAAA,cAAoB;MACMD,EAAA,CAAAE,MAAA,aAAK;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;MAjBtCH,EAAA,CAAAM,SAAA,GAAuB;MAAvBN,EAAA,CAAAO,UAAA,cAAA2B,GAAA,CAAAhB,SAAA,CAAuB;MAMIlB,EAAA,CAAAM,SAAA,GAAmC;MAAnCN,EAAA,CAAAO,UAAA,SAAA2B,GAAA,CAAAzB,CAAA,CAAAC,KAAA,CAAAC,MAAA,IAAAuB,GAAA,CAAAlB,WAAA,CAAmC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
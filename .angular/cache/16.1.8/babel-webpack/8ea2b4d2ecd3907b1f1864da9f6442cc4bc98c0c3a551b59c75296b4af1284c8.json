{"ast":null,"code":"var _class;\nimport { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/users.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../title/title.component\";\nimport * as i5 from \"../input-container/input-container.component\";\nimport * as i6 from \"../input-validation/input-validation.component\";\nexport class RegistrationComponent {\n  constructor(userService, router, fb, activatedRoute) {\n    this.userService = userService;\n    this.router = router;\n    this.fb = fb;\n    this.activatedRoute = activatedRoute;\n    this.isSubmitted = false;\n    this.returnUrl = '';\n  }\n  ngOnInit() {\n    this.registrationForm = this.fb.group({\n      name: [\"\", [Validators.required, Validators.minLength(5)]],\n      email: [\"\", [Validators.required, Validators.email]],\n      password: [\"\", Validators.required, Validators.minLength(5)],\n      confirmPassword: [\"\", Validators.required],\n      address: [\"\", Validators.required, Validators.minLength(10)]\n    }, {\n      Validators: this.passwordMatchValidation(\"password\", \"confirmPassword\")\n    });\n    this.returnUrl = this.activatedRoute.snapshot.queryParams.returnUrl;\n  }\n  get f() {\n    return this.registrationForm.controls;\n  }\n  passwordMatchValidation(password, confirmPassword) {\n    const validator = form => {\n      const passwordControl = form.get(password);\n      const confirmPasswordControl = form.get(confirmPassword);\n      if (!passwordControl || !confirmPasswordControl) return;\n      if (passwordControl.value != confirmPasswordControl.value) {\n        confirmPasswordControl.setErrors({\n          notMatch: true\n        });\n      } else {\n        const errors = confirmPasswordControl.errors;\n        if (!errors) return;\n        delete errors.notMatch;\n        confirmPasswordControl.setErrors(errors);\n      }\n    };\n    return validator;\n  }\n  onSubmit() {\n    this.isSubmitted = true;\n    if (this.registrationForm.invalid) return;\n    const userValue = this.registrationForm.value;\n    const user = {\n      name: userValue.name,\n      email: userValue.email,\n      password: userValue.password,\n      address: userValue.address,\n      id: ''\n    };\n    this.userService.registration(this.registrationForm.value).subscribe(() => {});\n  }\n}\n_class = RegistrationComponent;\n_class.ɵfac = function RegistrationComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.UsersService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-registration\"]],\n  decls: 7,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"details\"], [\"title\", \"User Registration\"], [3, \"formGroup\", \"ngSubmit\"], [\"label\", \"Name\"], [\"type\", \"text\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [3, \"control\", \"showErrorsWhen\"]],\n  template: function RegistrationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"app-title\", 2);\n      i0.ɵɵelementStart(3, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function RegistrationComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"app-input-container\", 4);\n      i0.ɵɵelement(5, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"app-input-validation\", 6);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"control\", ctx.f.name)(\"showErrorsWhen\", ctx.isSubmitted);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.TitleComponent, i5.InputContainerComponent, i6.InputValidationComponent],\n  styles: [\".container[_ngcontent-%COMP%]{\\n    display: flex;\\n    justify-content: center;\\n    height: 100%;\\n    margin-top: 3rem;\\n    align-items: center;\\n}\\n\\n.details[_ngcontent-%COMP%]{\\n    width: 28rem;\\n}\\n\\nform[_ngcontent-%COMP%]{\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n}\\n\\ninput[_ngcontent-%COMP%]{\\n    width: 100%;\\n    height: 100%;\\n    border: none;\\n    border-bottom: 0 solid gray;\\n    transition: border-bottom 0.15s ease-out;\\n    background-color: white;\\n    font-size: 1.1rem;\\n    outline: none;\\n}\\n\\ninput[_ngcontent-%COMP%]::placeholder{\\n    color: #dfdfdf;\\n    font-size: 0.95rem;\\n}\\n\\ninput[_ngcontent-%COMP%]:focus{\\n    border-width: 2.9px;\\n    border-color: green;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osWUFBWTtJQUNaLDJCQUEyQjtJQUMzQix3Q0FBd0M7SUFDeEMsdUJBQXVCO0lBQ3ZCLGlCQUFpQjtJQUNqQixhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksY0FBYztJQUNkLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixtQkFBbUI7QUFDdkIiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVye1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG1hcmdpbi10b3A6IDNyZW07XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmRldGFpbHN7XG4gICAgd2lkdGg6IDI4cmVtO1xufVxuXG5mb3Jte1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuaW5wdXR7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItYm90dG9tOiAwIHNvbGlkIGdyYXk7XG4gICAgdHJhbnNpdGlvbjogYm9yZGVyLWJvdHRvbSAwLjE1cyBlYXNlLW91dDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBmb250LXNpemU6IDEuMXJlbTtcbiAgICBvdXRsaW5lOiBub25lO1xufVxuXG5pbnB1dDo6cGxhY2Vob2xkZXJ7XG4gICAgY29sb3I6ICNkZmRmZGY7XG4gICAgZm9udC1zaXplOiAwLjk1cmVtO1xufVxuXG5pbnB1dDpmb2N1c3tcbiAgICBib3JkZXItd2lkdGg6IDIuOXB4O1xuICAgIGJvcmRlci1jb2xvcjogZ3JlZW47XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","RegistrationComponent","constructor","userService","router","fb","activatedRoute","isSubmitted","returnUrl","ngOnInit","registrationForm","group","name","required","minLength","email","password","confirmPassword","address","passwordMatchValidation","snapshot","queryParams","f","controls","validator","form","passwordControl","get","confirmPasswordControl","value","setErrors","notMatch","errors","onSubmit","invalid","userValue","user","id","registration","subscribe","i0","ɵɵdirectiveInject","i1","UsersService","i2","Router","i3","FormBuilder","ActivatedRoute","selectors","decls","vars","consts","template","RegistrationComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵlistener","RegistrationComponent_Template_form_ngSubmit_3_listener","ɵɵelementEnd","ɵɵadvance","ɵɵproperty"],"sources":["/Users/mayuresh483/Desktop/Personal Projects/Food Bite/Foodbite/src/app/pages/registration/registration.component.ts","/Users/mayuresh483/Desktop/Personal Projects/Food Bite/Foodbite/src/app/pages/registration/registration.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UsersService } from \"src/app/services/users.service\";\nimport { User } from \"src/app/shared/models/User\";\n\n@Component({\n  selector: \"app-registration\",\n  templateUrl: \"./registration.component.html\",\n  styleUrls: [\"./registration.component.css\"],\n})\nexport class RegistrationComponent implements OnInit {\n  registrationForm!: FormGroup;\n  isSubmitted: boolean = false;\n  returnUrl:string='';\n\n  constructor(\n    private userService: UsersService,\n    private router: Router,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.registrationForm = this.fb.group(\n      {\n        name: [\"\", [Validators.required, Validators.minLength(5)]],\n        email: [\"\", [Validators.required, Validators.email]],\n        password: [\"\", Validators.required, Validators.minLength(5)],\n        confirmPassword: [\"\", Validators.required],\n        address: [\"\", Validators.required, Validators.minLength(10)],\n      },\n      {\n        Validators: this.passwordMatchValidation(\"password\", \"confirmPassword\"),\n      }\n    );\n    this.returnUrl= this.activatedRoute.snapshot.queryParams.returnUrl;\n  }\n\n  get f() {\n    return this.registrationForm.controls;\n  }\n\n  passwordMatchValidation(password: string, confirmPassword: string) {\n    const validator = (form: AbstractControl) => {\n      const passwordControl = form.get(password);\n      const confirmPasswordControl = form.get(confirmPassword);\n\n      if (!passwordControl || !confirmPasswordControl) return;\n      if (passwordControl.value != confirmPasswordControl.value) {\n        confirmPasswordControl.setErrors({ notMatch: true });\n      } else {\n        const errors = confirmPasswordControl.errors;\n        if (!errors) return;\n        delete errors.notMatch;\n        confirmPasswordControl.setErrors(errors);\n      }\n    };\n    return validator;\n  }\n\n  onSubmit(){\n    this.isSubmitted=true;\n    if(this.registrationForm.invalid) return;\n    const userValue = this.registrationForm.value;\n\n    const user:User={\n      name:userValue.name,\n      email:userValue.email,\n      password:userValue.password,\n      address:userValue.address,\n      id:''\n    }\n    this.userService.registration(this.registrationForm.value).subscribe(()=>{\n\n    })\n  }\n}\n","<div class=\"container\">\n    <div class=\"details\">\n        <app-title title=\"User Registration\"></app-title>\n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\n            <app-input-container label=\"Name\">\n                 <input type=\"text\" placeholder=\"Name\" formControlName=\"name\">\n            </app-input-container>\n            <app-input-validation [control] ='f.name' [showErrorsWhen]=\"isSubmitted\"></app-input-validation>  \n        </form>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
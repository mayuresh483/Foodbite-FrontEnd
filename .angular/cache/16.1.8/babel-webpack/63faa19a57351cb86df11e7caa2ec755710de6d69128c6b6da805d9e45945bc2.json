{"ast":null,"code":"var _class;\nimport { BehaviorSubject, tap } from 'rxjs';\nimport { User } from '../shared/models/User';\nimport { USER_LOGIN_URL } from '../shared/utility/constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nexport class UsersService {\n  constructor(http, toast) {\n    this.http = http;\n    this.toast = toast;\n    this.userSubject = new BehaviorSubject(new User());\n    this.userObservable = this.userSubject.asObservable();\n  }\n  login(userLogin) {\n    return this.http.post(USER_LOGIN_URL, userLogin).pipe(tap({\n      next: user => {\n        this.userSubject.next(user);\n        this.toast.success(`Welcome to FoodBite ${user.name}!`, `Login Successful`);\n      },\n      error: error => {\n        this.toast.error(error.error, 'Login Failed');\n      }\n    }));\n  }\n  setUserToLocalStorage(user) {\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n}\n_class = UsersService;\n_class.ɵfac = function UsersService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","tap","User","USER_LOGIN_URL","UsersService","constructor","http","toast","userSubject","userObservable","asObservable","login","userLogin","post","pipe","next","user","success","name","error","setUserToLocalStorage","localStorage","setItem","JSON","stringify","i0","ɵɵinject","i1","HttpClient","i2","ToastrService","factory","ɵfac","providedIn"],"sources":["/Users/mayuresh483/Desktop/Personal Projects/Food Bite/Foodbite/src/app/services/users.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\nimport { User } from '../shared/models/User';\nimport { IUserLogin } from '../shared/interface/IUserLogin';\nimport { HttpClient } from '@angular/common/http';\nimport { USER_LOGIN_URL } from '../shared/utility/constants';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  private userSubject = new BehaviorSubject<User>(new User());\n  public userObservable:Observable<User>;\n\n  constructor(private http:HttpClient, private toast:ToastrService) { \n    this.userObservable = this.userSubject.asObservable();\n  }\n\n  login(userLogin:IUserLogin):Observable<User>{\n    return this.http.post<User>(USER_LOGIN_URL,userLogin).pipe(\n      tap({\n        next:(user)=>{\n          this.userSubject.next(user);\n          this.toast.success(\n            `Welcome to FoodBite ${user.name}!`,\n            `Login Successful`\n          )\n        },error:(error)=>{\n          this.toast.error(error.error,'Login Failed');\n        }\n      })\n    );\n  }\n\n  private setUserToLocalStorage(user:User){\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n}\n"],"mappings":";AACA,SAASA,eAAe,EAAcC,GAAG,QAAQ,MAAM;AACvD,SAASC,IAAI,QAAQ,uBAAuB;AAG5C,SAASC,cAAc,QAAQ,6BAA6B;;;;AAM5D,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,IAAe,EAAUC,KAAmB;IAA5C,KAAAD,IAAI,GAAJA,IAAI;IAAqB,KAAAC,KAAK,GAALA,KAAK;IAH1C,KAAAC,WAAW,GAAG,IAAIR,eAAe,CAAO,IAAIE,IAAI,EAAE,CAAC;IAIzD,IAAI,CAACO,cAAc,GAAG,IAAI,CAACD,WAAW,CAACE,YAAY,EAAE;EACvD;EAEAC,KAAKA,CAACC,SAAoB;IACxB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAOV,cAAc,EAACS,SAAS,CAAC,CAACE,IAAI,CACxDb,GAAG,CAAC;MACFc,IAAI,EAAEC,IAAI,IAAG;QACX,IAAI,CAACR,WAAW,CAACO,IAAI,CAACC,IAAI,CAAC;QAC3B,IAAI,CAACT,KAAK,CAACU,OAAO,CAChB,uBAAuBD,IAAI,CAACE,IAAI,GAAG,EACnC,kBAAkB,CACnB;MACH,CAAC;MAACC,KAAK,EAAEA,KAAK,IAAG;QACf,IAAI,CAACZ,KAAK,CAACY,KAAK,CAACA,KAAK,CAACA,KAAK,EAAC,cAAc,CAAC;MAC9C;KACD,CAAC,CACH;EACH;EAEQC,qBAAqBA,CAACJ,IAAS;IACrCK,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC,CAAC;EACpD;;SA1BWZ,YAAY;;mBAAZA,MAAY,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA;AAAA;;SAAZ1B,MAAY;EAAA2B,OAAA,EAAZ3B,MAAY,CAAA4B,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}